# This is a file describing a standard autoconfiguration, do not edit.
# See custom/sample.conf for a more generic template and explanation on the syntax.

name: WT Gunner v0.6.4-SA
pvp: true

slots:
    core:
        class: CoreUnit
    shield:
        class: ShieldGeneratorUnit
    weapon:
        class: WeaponUnit
        select: manual
    radar:
        class: RadarPVPUnit
        select: manual
    db:
        class: DatabankUnit
        select: manual
    ammoCont:
        class: AmmoContainerUnit
        select: manual

handlers:
    unit:
        onStart:
            lua: |
                weaponsPerPanel = 3 --export
                showGunnerAR = true --export
                
                function weaponClass(a,b,c)local d={}local e={}local f={}local g=0;c=c or 3;local function h()if not(type(b)=='table'and#b>0)then return end;local i;for j,k in ipairs(b)do if(j-1)%c==0 then i=a.createWidgetPanel('')end;local l=a.createData(k.getWidgetData())e[l]=k;a.addDataToWidget(l,a.createWidget(i,k.getWidgetType()))end end;local function m(e)return{["weaponStatus"]=e:match('"weaponStatus":(%d+)'),["animationTime"]=tonumber(e:match('"cycleAnimationRemainingTime":(.-),'))or 0,["fireReady"]=e:match('"fireReady":(.-),'),["outOfZone"]=e:match('"outOfZone":(.-),'),["targetConstructID"]=e:match('"constructId":"(.-)"'),["hitProb"]=math.floor((tonumber(e:match('"hitProbability":(%d%.%d+),'))or 0)*100)}end;local function n(o,f)if o["weaponStatus"]~=f["weaponStatus"]or o["fireReady"]~=f["fireReady"]or o["outOfZone"]~=f["outOfZone"]or o["targetConstructID"]~=f["targetConstructID"]or o["hitProb"]~=f["hitProb"]or o["animationTime"]>(f["animationTime"]or 0)then return true end;return false end;function d.onUpdate()for l,k in pairs(e)do local e=k.getWidgetData()local o=m(e)local p=n(o,f[l]or{})f[l]=o;local q=a.getUtcTime()if not p and q-g<1 then goto r end;g=q;local s=e:match('"ammoName":"(.-)"')local t=""if s:match("Antimatter")then t="AM"elseif s:match("Electromagnetic")then t="EM"elseif s:match("Kinetic")then t="KI"elseif s:match("Thermic")then t="TH"end;local u=""if s:match("Precision")then u="Prec"elseif s:match("Heavy")then u="Heavy"end;e=e:gsub('"ammoName":"(.-)"','"ammoName":"'..o["hitProb"]..'%% - '..t..' '..u..'"')e=e:gsub('"constructId":"(%d+(%d%d%d))","name":"(.?.?.?.?.?.?.?.?.?.?.?.?.?.?).-"','"constructId":"%1","name":"%2 - %3"')if not a.updateData(l,e)then a.print('wtWeapons update error')end::r::end end;h()return d end

                function radarClass(a,b,c,d,e,f,g)local h=require("dkjson")local i={}local j=50;local l=0.1;local m={['l']=true,['m']=true,['s']=true,['xs']=true}local n=false;local o=f or{}local p={}local q={}local r=0;local s={}local t=0;local u={}local v={}local w={}local x;local y;local z=0;local A;i.counter={["total"]=0,["displayed"]=0,["allies"]=0,["enemies"]=0,["dead"]=0,["locked by"]=0,["attacked by"]=0,closest={},idents={},threats={}}i.lastEnemyContact=0;if g~=nil and g.hasKey('friendlist')then local B=0;for k,C in pairs(h.decode(g.getStringValue('friendlist')))do p[tonumber(k)]=C;B=B+1 end;a.print('Loaded '..B..' ids to friendlist from databank')end;if g~=nil and g.hasKey('deadCores')then local B=0;for k,C in pairs(h.decode(g.getStringValue('deadCores')))do q[tonumber(k)]=C;B=B+1 end;a.print('Loaded '..B..' ids to deadCores from databank')end;local D=false;local E=false;local F={}local G=m;local H=false;local I;local J={}local K=a.getScreenHeight()local L=a.getScreenWidth()local function M(N,O,P,Q,R)local S=400;local T=c.getPointOnScreen({O.x,O.y,O.z})if T[3]<=0 then return''end;local U=T[1]*L-S/2;local V=T[2]*K-S/2;svg=[[<svg viewBox="0 0 500 500" class="point" style="left:]]..U..[[px;top:]]..V..[[px;position:absolute;width:]]..S..[[px;height:]]..S..[[px">]]if N=='circle'then svg=svg..[[<circle cx="250" cy="250" r="10" opacity="0.3" stroke="]]..P..[[" stroke-width="2" fill="none"/>]]elseif N=='cross'then svg=svg..[[<line x1="250" y1="242" x2="250" y2="258" opacity="0.5"  stroke="]]..P..[[" stroke-width="2"/><line x1="242" y1="250" x2="258" y2="250" opacity="0.5"  stroke="]]..P..[[" stroke-width="2"/>]]elseif N=='box'then svg=svg..[[<rect x="240" y="240" width="20" height="20" style="fill: rgba(0,0,0,0); stroke: ]]..P..[[; stroke-width: 2"/>]]end;svg=svg..[[<text x="50%" y ="47%" style="text-anchor: middle; fill: ]]..P..[[; font-family: Arial, sans-serif; font-size: 14px;">]]..(Q or'')..[[</text><text x="50%" y ="55%" style="text-anchor: middle; fill: ]]..P..[[; font-family: Arial, sans-serif; font-size: 14px;">]]..(R or'')..[[</text></svg>]]return svg end;local function W(O,P,Q,R)return M('box',O,P,Q,R)end;local function X()I=a.createData(e.getWidgetData())a.addDataToWidget(I,a.createWidget(a.createWidgetPanel(''),e.getWidgetType()))end;local function Y()if g~=nil then g.setStringValue('deadCores',h.encode(q))a.print('saved deadCores to databank')end end;local function Z()local _={}local a0={}local a1={}local a2={}local a3={}local a4=e.getWidgetData()local a5=a4:gmatch('({"constructId":".-{.-}.-})')local a6=next(F)~=nil;local a7={["total"]=0,["displayed"]=0,["allies"]=0,["enemies"]=0,["dead"]=0,["locked by"]=0,["attacked by"]=0,idents={},threats={},closest={}}for a8 in a5 do a7["total"]=a7["total"]+1;if a7["total"]%j==0 then coroutine.yield()end;local a9=a.getUtcTime()local aa=tonumber(a8:match('"constructId":"([%d]*)"'))local ab=a8:match('"size":"(.-)"')local ac=e.hasMatchingTransponder(aa)if ac then table.insert(_,aa)end;local ad=o[aa]==true or p[aa]==true or ac;local ae=e.isConstructAbandoned(aa)if ae then a7["dead"]=a7["dead"]+1;if q[aa]==nil and a9-10>r then r=a9;local af=e.getConstructWorldPos(aa)q[aa]=af;Y()local ag='Dead core: '..aa..' at '..'::pos{0,0,'..af[1]..','..af[2]..','..af[3]..'}'a.print(ag)end elseif ad then if#a7.closest<8 then table.insert(a7.closest,aa)end;a7["allies"]=a7["allies"]+1 else if#a7.closest<8 then table.insert(a7.closest,aa)end;a7["enemies"]=a7["enemies"]+1 end;local ah=e.getThreatFrom(aa)if ah=='identified'then table.insert(a7.threats,aa)a7["locked by"]=a7["locked by"]+1 elseif ah=='attacked'then table.insert(a7.threats,aa)a7["attacked by"]=a7["attacked by"]+1 end;if e.isConstructIdentified(aa)then table.insert(a7.idents,aa)end;if e.getThreatRateFrom(aa)<3 and F[aa%1000]~=true and aa~=e.getTargetId()then if not D and not G[ab:lower()]then goto ai end;if ad~=n then goto ai end;if not D and a6 and F[aa%1000]~=true then goto ai end;if D and not e.isConstructIdentified(aa)then goto ai end end;if E then a8=a8:gsub('"name":"(.?.?.?.?).-"','"name":"-----------------------%1 - '..string.format("%03d",conructID%1000)..'"')else a8=a8:gsub('"name":"(.+)"','"name":"'..string.format("%03d",aa%1000)..' - %1"')end;a8=a8:gsub('"distance":(%d+).-,','"distance":%1,')if not H then table.insert(a0,a8)elseif ab=="L"then table.insert(a0,a8)elseif ab=="M"then table.insert(a1,a8)elseif ab=="S"then table.insert(a2,a8)elseif ab=="XS"then table.insert(a3,a8)end;a7["displayed"]=a7["displayed"]+1::ai::end;if i.counter["enemies"]==0 and a7["enemies"]>0 then a.playSound("wthud/radarContact.mp3")elseif a7["enemies"]==0 and i.counter["enemies"]>0 then a.playSound("wthud/radarClear.mp3")end;if i.counter["enemies"]<a7["enemies"]then i.lastEnemyContact=a.getUtcTime()end;i.counter=a7;local aj={}for ak,al in pairs(G)do if al then table.insert(aj,ak:upper())end end;table.sort(aj)local am=(a7["displayed"]..'/'..a7["total"]..' ')..(a6 and'FOCUS 'or'')..(n and'Friends'or'Enemies')..(D and' - LOCKED'or'')..' ('..table.concat(aj,",")..')'local an=a4:match('"elementId":".+')local ao=e.getTargetId()if g~=nil then if e.isConstructIdentified(ao)then g.setIntValue('targetSpeed',math.floor(e.getConstructSpeed(ao)))else g.setIntValue('targetSpeed',-1)end end;an=an:gsub('"errorMessage":""','"errorMessage":"'..am..'"')local ap=''local aq=false;if#a0>0 then ap=ap..table.concat(a0,",")aq=true end;if#a1>0 then if aq then ap=ap..','end;ap=ap..table.concat(a1,",")aq=true end;if#a2>0 then if aq then ap=ap..','end;ap=ap..table.concat(a2,",")aq=true end;if#a3>0 then if aq then ap=ap..','end;ap=ap..table.concat(a3,",")end;a4='{"constructsList":['..ap.."],"..an;a.updateData(I,a4)J=_ end;local function ar()while true do Z()coroutine.yield()end end;local as=coroutine.create(ar)local function at(au)local av=au;while true do av,k=string.gsub(av,"^(-?%d+)(%d%d%d)",'%1,%2')if k==0 then break end end;return av end;local function aw(ax)if ax==nil then return''end;ax=ax*3.6;return at(math.floor(ax))..' km/h'end;local function ay(az)if e.isConstructIdentified(az)then return aw(vec3(e.getConstructWorldVelocity(az)):len())end;return aw(s[az])end;local function aA(az)local aB=e.getConstructOwnerEntity(az)if aB.isOrganization then return' '..a.getOrganization(aB.id).tag else return' '..a.getPlayerName(aB.id)end end;function i.onFlush()local a9=a.getUtcTime()for aC,aD in ipairs(J)do local O=vec3(e.getConstructWorldPos(aD))if u[aD]==nil then u[aD]={O,a9}end;if O~=u[aD][1]then v[aD]=u[aD]u[aD]={O,a9}if w[aD]==nil then w[aD]=u[aD]end;if a9-t>1 then t=a9;s[aD]=(u[aD][1]-w[aD][1]):len()/(u[aD][2]-w[aD][2])w[aD]=u[aD]end end end;local ao=e.getTargetId()if ao==x then local aE=e.getConstructDistance(ao)if y==nil then y={aE,a9}elseif aE~=y[1]and a9-y[2]>1 then A=(y[1]-aE)/(a9-y[2])y={aE,a9}end else y=nil;A=nil end;x=ao end;function i.getHUD()local aF=''if not showGunnerAR then return aF end;local a9=a.getUtcTime()for aC,aD in ipairs(J)do local O=vec3(e.getConstructWorldPos(aD))if v[aD]~=nil then O=u[aD][1]+(u[aD][1]-v[aD][1]):normalize()*(a9-u[aD][2])*(u[aD][1]-v[aD][1]):len()/(u[aD][2]-v[aD][2])end;if O then local P="#0cf27b"if e.getThreatRateFrom(aD)>2 then P="#FF5B72"end;aF=aF..W(O,P,aD%1000 ..aA(aD),ay(aD))end end;local aG=vec3(d.getWorldPosition())for aD,af in pairs(q)do local af=vec3(af)local aH=(vec3(af)-aG):len()if aH>400000 then aF=aF..W(af,"#ccc",aD%1000,string.format('%0.2f',aH/200000)..' su')end end;return aF end;function i.getTargClosingSpeed()return A end;function i.onTick()coroutine.resume(as)end;function i.clearIDFilter()F={}end;function i.addIDFilter(aI)F[aI]=true end;local function aJ()if g~=nil then g.setStringValue('friendlist',h.encode(p))a.print('saved friendlist to databank')end end;function i.onTextInput(aK)aK=string.lower(aK)if aK:match('^f%A*$')~=nil then i.clearIDFilter()for aI in aK:gmatch('%D(%d%d%d)')do i.addIDFilter(tonumber(aI))end elseif aK:match('^s[sh]?%s?x?[sml]?$')~=nil then local aL,ak=aK:match('^s([sh]?)%s?(x?[sml]?)$')local aM;if aL==nil or aL==''then G=m;return elseif aL=='s'then aM=true elseif aL=='h'then aM=false end;if ak==nil then return end;G[ak]=aM elseif aK:match('^addall')~=nil then for aC,aI in ipairs(e.getConstructIds())do p[aI]=true;a.print('Adding '..aI..' to friendlist')end;aJ()elseif aK:match('^addid')~=nil then for aI in aK:gmatch('%D(%d+)')do p[tonumber(aI)]=true end;aJ()elseif aK:match('^clearall$')~=nil then p={}aJ()elseif aK:match('^cleardead')~=nil then local aN=true;for aI in aK:gmatch('%D(%d%d%d)')do aN=false;for aO,aC in pairs(q)do if aO%1000==tonumber(aI)then q[aO]=nil end end;i.addIDFilter(tonumber(aI))end;if aN then q={}end;Y()end end;function i.toggleFriendlyMode()n=not n end;function i.toggleOnlyIdentified()D=not D end;function i.toggleGunnerMode()E=not E end;X()b.setTimer('wtRadarTick',l)return i end

                function damageReporterClass(a,b,c)local d={}if c==nil then c=10 end;if a==nil then a=1 end;if b==nil then b=60 end;local e=b+c+5;local f=50000;local g;local h=""local function i()g={peakDps=0,damageDealt=0,damageDealtById={},damageDealtHistory={},damageRecievedHistory={},shotsHit=0,shotsFired=0}for j=1,e do g.damageDealtHistory[#g.damageDealtHistory+1]=0;g.damageRecievedHistory[#g.damageRecievedHistory+1]=0 end end;i()local function k(l)table.remove(l,1)l[#l+1]=0 end;local function m(n,o,p)p=p or f;local function q(r,s,t)local u={}for j=0,t-1 do local v=0;for w=0,s-1 do v=v+r[#r-j-w]end;local x=v/s;u[t-j]=x;if x>p then p=x end end;return u end;local function y(r,t)local v=0;for j=#r,#r-t+1,-1 do v=v+r[j]end;return v/t end;local z=200;local A=100;local B=30;local C=30;p=p or 50000;local function D(E)local F={}for j,r in ipairs(E)do local G=(1-math.min(r/p,1))*A+C;local H=(j-1)/(#E-1)*z+B;table.insert(F,{x=H,y=G})end;return F end;local I=c;local J=b;local K=q(n,I,J)local L=K[#K]local M=q(o,I,J)local N=M[#M]local O=y(n,J)local P=y(o,J)local Q=(1-O/p)*A+C;local R=(1-P/p)*A+C;local S=D(K)local T=D(M)local function U(V,W)local X=''local Y;for Z,_ in ipairs(V)do X=X..'<circle class="'..W..'" cx="'.._.x..'" cy="'.._.y..'" r="1"/>'if Y~=nil then X=X..'<line class="'..W..'" x1="'.._.x..'" y1="'.._.y..'" x2="'..Y.x..'" y2="'..Y.y..'" />'end;Y=_ end;return X end;local function a0(a1)return string.format('%.1fk',a1/1000)end;local a2=[[
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                     width="260px" height="160px" viewBox="0 0 260 160" xml:space="preserve">
                <style type="text/css">
                    .outd{
                        stroke-width: 1;
                        stroke: #050;
                        stroke-opacity: 0.3;
                        fill-opacity: 0.75;
                        fill: #fff;
                    }
                    .ind{
                        stroke-width: 1;
                        stroke: #FF5B72;
                        stroke-opacity: 0.3;
                        fill-opacity: 0.75;
                        fill: #fff;
                    }
                    .text{
                        stroke-width: 1;
                        font-size: 8;
                    }
                </style>
                    <rect class="outd" x="29" y="129" width="202" height="2"/>
                    <rect class="outd"  x="29" y="29" width="2" height="102"/>
                ]]if O>0 then a2=a2 ..U(S,'ind')a2=a2 ..'<line class="ind" stroke-width="0.5" x1="28" y1="'..Q..'" x2="228" y2="'..Q..'" stroke-dasharray="5" stroke-dashoffset="7.5"/><text class="ind text" font-size="11" text-anchor="end" x="27" y="'..Q..'">'..a0(O)..'</text>'end;if P>0 then a2=a2 ..U(T,'outd')a2=a2 ..'<line class="" stroke="#cfc" stroke-opacity="0.5" stroke-width="1" x1="28" y1="'..R..'" x2="228" y2="'..R..'" stroke-dasharray="5" stroke-dashoffset="7.5"/><text class="outd text" font-size="11" text-anchor="end" x="27" y="'..R..'">'..a0(P)..'</text>'end;if N>0 then a2=a2 ..'<text class="outd text" font-size="11" x="233" y="'..T[#T].y..'">'..a0(N)..'</text>'end;if L>0 then a2=a2 ..'<text class="ind text" font-size="11" x="233" y="'..S[#S].y..'">'..a0(L)..'</text>'end;a2=a2 ..'</svg>'return a2 end;function d.weaponOnHit(a3,a4)g.damageDealt=g.damageDealt+a4;g.damageDealtById[a3]=(g.damageDealtById[a3]or 0)+a4;g.shotsHit=g.shotsHit+1;g.shotsFired=g.shotsFired+1;g.damageDealtHistory[#g.damageDealtHistory]=g.damageDealtHistory[#g.damageDealtHistory]+a4 end;function d.weaponOnMiss(a3)g.shotsFired=g.shotsFired+1 end;function d.shieldOnAbsorb(a5,a6)g.damageRecievedHistory[#g.damageRecievedHistory]=g.damageRecievedHistory[#g.damageRecievedHistory]+a5 end;function d.onPvPTimer(a7)if not a7 then i()end end;function d.onTimer()local a8=0;for j=e,e-c,-1 do a8=a8+g.damageDealtHistory[j]end;local a9=a8/c;if a9>g.peakDps then g.peakDps=a9 end;h=m(g.damageRecievedHistory,g.damageDealtHistory)k(g.damageDealtHistory)k(g.damageRecievedHistory)end;h=m(g.damageRecievedHistory,g.damageDealtHistory)unit.setTimer('weaponStats',a)function d.getDamageStats()return g end;function d.getDpsGraphHtml()return h end;return d end

                wtWeapons = weaponClass(system, weapon, weaponsPerPanel)
                wtRadar = radarClass(system, unit, library, construct, radar_1, {}, db_1)
                dpsReporter = damageReporterClass()

                local a=[[
                <style>
                .ui {
                    color: white;
                    font-family: monospace;
                    font-size: 0.75em;
                     font-weight: bold;
                     opacity: 0.75;
                    white-space: pre;
                     text-shadow: -1px -1px 0 #050, 1px -1px 0 #050, -1px 1px 0 #050, 1px 1px 0 #050;
                }
                .blue {
                    color: #5BD8FF;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .red {
                    color: #FF5B72;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .orange {
                    color: #fc934f;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .yellow {
                    color: #fce94f;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                .green {
                    color: #72ff5b;
                     text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
                }
                </style>
                ]]local function b(c)return math.max(math.min(50000/3.6,50000/3.6-10713*(c-10000)/(853926+c-10000)),20000/3.6)end;local function d(e,f,g,h)local i='-'h=h or'█'local j=math.floor(math.min(math.abs(math.max(f-1,0)),1)*e+0.5)local l=math.floor(math.min(math.abs(f),1)*e+0.5)local m;if f>=0 then m='[</a><a class="'..(g or'')..'">'..string.rep(h,l-j)..'</a><a class="red">'..string.rep(h,j)..'</a><a>'..string.rep(i,e-l)..']'elseif f<0 then m='['..string.rep(i,e-l)..'</a><a class="red">'..string.rep(h,l).."</a><a>]"else m='[</a><a class="red">'..string.rep('X',e).."</a><a>]"end;return m end;local function n(o)if o<1000 then return math.ceil(o)..'m'elseif o<1000*10 then return string.format("%.2fkm",o/1000)elseif o<1000*100 then return string.format("%.1fkm",o/1000)elseif o<1000*200*10 then return string.format("%.2fsu",o/1000/200)elseif o<1000*200*100 then return string.format("%.1fsu",o/1000/200)else return math.ceil(o/1000/200)..'su'end end;local function p(q,r,s)if q>r+s*2 then return'red'elseif q>r+s then return'orange'elseif q>r then return'yellow'else return''end end;local function t(u)local v=u;while true do v,k=string.gsub(v,"^(-?%d+)(%d%d%d)",'%1,%2')if k==0 then break end end;return v end;local function w(x)if x==nil then return''end;x=x*3.6;return t(math.floor(x))..' km/h'end;local function y(x)x=x or 5;local z={'|','/','|','\\'}local A=math.floor(system.getUtcTime()*x%#z)+1;return z[A]end;local function B(C)if C<1000 then return math.floor(C)elseif C<1000*10 then return string.format("%.2fk",C/1000)elseif C<1000*100 then return string.format("%.1fk",C/1000)elseif C<1000*1000*10 then return string.format("%.2fm",C/1000000)elseif C<1000*200*100 then return string.format("%.1fm",C/1000000)else return math.ceil(C/1000000)..'m'end end;local function D(e,E)local F=(e-#E)/2;local G=math.floor(F)local H=math.ceil(F)local I=string.rep(' ',G)..E..string.rep(' ',H)return I end;local function J()return radar_1 end;local function K()activeRadar=J()if wtRadar==nil then return''end;local function L(M)if activeRadar.getThreatRateFrom(M)>2 then return'red'elseif activeRadar.hasMatchingTransponder(M)then return'green'else return''end end;local function N(M)return string.format('%2s',activeRadar.getConstructCoreSize(M))end;local function O(M)local P=activeRadar.getConstructOwnerEntity(M)if P==nil then return''end;local Q;if P.isOrganization then Q=system.getOrganization(P.id).tag or''else Q=system.getPlayerName(P.id)or''end;return Q:sub(1,4)end;local function R(M)if M==nil then return string.rep(' ',19)end;return'</a><a class="'..L(M)..'">'..N(M)..' '..string.format('%03d',M%1000)..' '..string.format('%-6s',n(activeRadar.getConstructDistance(M)))..'  '..string.format('%-4s',O(M))..'</a><a>'end;local function S(M)if M==nil then return string.rep(' ',11)end;return string.format('%-11s',w(activeRadar.getConstructSpeed(M)))end;local T=''if wtRadar.counter["attacked by"]>0 then T='red'end;return[[
                <style>
                .contacts-panel {
                    position: absolute;
                    top: 2vh;
                    left: 20vw;
                    font-size: 0.75em;
                }
                </style>
                <div class="ui contacts-panel"><a>
                 ___]]..D(71,'CONTACTS '..string.format('%-5d',wtRadar.counter["total"]))..[[___
                |     ENEMIES ]]..string.format('%-5d',wtRadar.counter["enemies"])..[[   |                                 |    </a><a class="]]..T..[[">ATTACKING  ]]..string.format('%-5d',wtRadar.counter["attacked by"])..[[</a><a> |
                |      ALLIES ]]..string.format('%-5d',wtRadar.counter["allies"])..[[   |          IDENTIFIED             |     THREATS   ]]..string.format('%-5d',wtRadar.counter["locked by"]+wtRadar.counter["attacked by"])..[[ | 
                |                     |                                 |                     |
                  ]]..R(wtRadar.counter.closest[1])..[[ | ]]..R(wtRadar.counter.idents[1])..[[ ]]..S(wtRadar.counter.idents[1])..[[ | ]]..R(wtRadar.counter.threats[1])..[[ 
                  ]]..R(wtRadar.counter.closest[2])..[[ | ]]..R(wtRadar.counter.idents[2])..[[ ]]..S(wtRadar.counter.idents[2])..[[ | ]]..R(wtRadar.counter.threats[2])..[[ 
                  ]]..R(wtRadar.counter.closest[3])..[[ | ]]..R(wtRadar.counter.idents[3])..[[ ]]..S(wtRadar.counter.idents[3])..[[ | ]]..R(wtRadar.counter.threats[3])..[[ 
                  ]]..R(wtRadar.counter.closest[4])..[[ | ]]..R(wtRadar.counter.idents[4])..[[ ]]..S(wtRadar.counter.idents[4])..[[ | ]]..R(wtRadar.counter.threats[4])..[[ 
                  ]]..R(wtRadar.counter.closest[5])..[[ | ]]..R(wtRadar.counter.idents[5])..[[ ]]..S(wtRadar.counter.idents[5])..[[ | ]]..R(wtRadar.counter.threats[5])..[[ 
                  ]]..R(wtRadar.counter.closest[6])..[[ | ]]..R(wtRadar.counter.idents[6])..[[ ]]..S(wtRadar.counter.idents[6])..[[ | ]]..R(wtRadar.counter.threats[6])..[[ 
                | ]]..R(wtRadar.counter.closest[7])..[[ | ]]..R(wtRadar.counter.idents[7])..[[ ]]..S(wtRadar.counter.idents[7])..[[ | ]]..R(wtRadar.counter.threats[7])..[[ |
                | ]]..R(wtRadar.counter.closest[8])..[[ | ]]..R(wtRadar.counter.idents[8])..[[ ]]..S(wtRadar.counter.idents[8])..[[ | ]]..R(wtRadar.counter.threats[8])..[[ |
                |___]]..string.rep(' ',71)..[[___|
                </a></div>
                ]]end;local function U()local V=a;local activeRadar=J()local W=0;local X=0;local Y=0;local Z=0;local _=ammoCont_1~=nil and ammoCont_1.getItemsVolume()/ammoCont_1.getMaxVolume()or 0;local a0=d(14,_)local a1=math.floor(_*100+0.5)local a2=dpsReporter.getDamageStats()local a3=string.format('%-4s',a2.shotsFired>0 and math.floor(a2.shotsHit/a2.shotsFired*100+0.5)..'%'or'NO INFO')local a4={}for a5=1,6 do a4[a5]=string.rep(' ',34)end;if(weapon_size or 0)>0 then local a6=0;for a5,a7 in ipairs(weapon)do a6=a6+a7.getHitProbability()local a8=a7.getWidgetData()local a9=a7.getMaxAmmo()>0 and a7.getAmmoCount()/a7.getMaxAmmo()or 0;local aa=a7.getStatus()local ab=a7.getOperationalState()~=1;local ac=''local ad,h;if ab then ad='BROKEN'ac='red'elseif aa==4 then ad='RELOADING'ac='yellow'h=y()a9=1 elseif aa==5 then ad='UNLOADING'ac='yellow'h=y()a9=1 elseif a9==0 then ad='RELOAD'ac='red'elseif aa==6 then ad='BLOCKED'ac='red'elseif a9<=0.1 then ad='LOW AMMO'ac='yellow'elseif aa==2 then ad='FIRING'elseif aa==1 then ad='IDLE'else ad='ERROR'ac='red'end;local ae='</a><a class="'..ac..'">'..a7.getClass():match('Weapon(.)')..'</a><a>'local ad='</a><a class="'..ac..'">'..string.format('%-9s',ad)..'</a><a>'local af=d(20,a9,ac,h)a4[a5]=ae..' '..af..' '..ad end;W=a6/weapon_size;X=weapon[1].getOptimalTracking()Y=weapon[1].getOptimalDistance()Z=(weapon[1].getMaxDistance()-weapon[1].getOptimalDistance())/2 end;local ag=activeRadar.getTargetId()if ag~=0 then local ah=activeRadar.getConstructAngularSpeed(ag)*180/math.pi;local ai=wtRadar.getTargClosingSpeed()local aj=activeRadar.getConstructSpeed(ag)local ak=activeRadar.getConstructName(ag)local al=activeRadar.getConstructMass(ag)local am=activeRadar.getConstructCoreSize(ag)local an=activeRadar.isConstructAbandoned(ag)local ao=activeRadar.getConstructDistance(ag)local ap=b(al)local aq=0;local ar=activeRadar.isConstructIdentified(ag)local as=ar and string.rep(' ',12)or'</a><a class="red">UNIDENTIFIED</a><a>'local at=string.format('%4s','['..am..']')local au=string.format('%03d',ag%1000)local av=string.format('%-17s',ak:sub(1,17))local aw=an and'</a><a class="red">DEAD</a><a>'or'    'local ax=string.format('%4s',math.floor(W*100+0.5)..'%')..' '..d(18,W)local ay=p(ah,X,X)local az=ar and'</a><a class="'..ay..'">'..string.format('%3d',math.ceil(ah))..'</a><a> deg/s'or string.rep(' ',9)local aA=p(ao,Y,Z)local aB='</a><a class="'..aA..'">'..string.format('%6s',n(ao))..'</a><a>'local aC=string.format('%12s',w(ai))local aD=ar and string.format('%11s',w(aj))or string.rep(' ',11)local aE=ar and string.format('%11s',w(ap))or string.rep(' ',11)V=V..[[
                <style>
                .target-panel {
                    position: absolute;
                    top: 69vh;
                    left: 29vw;
                    font-size: 0.75em;
                }
                </style>
                <div class="ui target-panel"><a>
                 ___ ]]..at..[[ ]]..au..[[ - ]]..av..[[ ___
                |               ]]..aw..[[                 | 
                | hit prob ]]..ax..[[ |
                |            ]]..as..[[            |
                             |  TARGET   |  OPTIMAL  
                  ---------------------------------- 
                    angular  | ]]..az..[[ | ]]..string.format('%-9s',math.floor(X)..' deg/s')..[[ 
                  -----------|-----------|---------- 
                   distance  |   ]]..aB..[[  | ]]..string.format('%6s',n(Y))..[[  
                  -----------|-----------|---------- 
                  closing at |    ]]..aC..[[   
                       speed |     ]]..aD..[[  
                   max speed |     ]]..aE..[[      
                |     damage |          ]]..string.format('%-7s',B(a2.damageDealtById[ag]or 0))..[[      |
                | -----------|---------------------- |
                |___                              ___|
                </a></div>
                ]]end;V=V..[[
                <style>
                .weapon-panel {
                    position: absolute;
                    top: 2vh;
                    left: 50vw;
                    font-size: 0.9em;
                }
                </style>
                <div class="ui weapon-panel"><a>
                 ___                               ___ ___                   ___
                |            WEAPON STATUS            |                         |
                |  ]]..a4[1]..[[ |   SHOTS FIRED   ]]..string.format('%-7s',tostring(a2.shotsFired))..[[ |
                   ]]..a4[2]..[[     SHOTS HIT     ]]..string.format('%-7s',tostring(a2.shotsHit))..[[ 
                   ]]..a4[3]..[[     ACCURACY      ]]..string.format('%-7s',a3)..[[ 
                   ]]..a4[4]..[[     PEAK DPS      ]]..string.format('%-7s',B(a2.peakDps))..[[ 
                   ]]..a4[5]..[[     DAMAGE        ]]..string.format('%-7s',B(a2.damageDealt))..[[ 
                |  ]]..a4[6]..[[ |   AMMO ]]..a0 ..[[ |
                |___                               ___|___                   ___|
                </a></div>
                ]]V=V..[[
                <style>
                .dps-panel {
                    position: absolute;
                    top: 16vh;
                    left: 70vw;
                    font-size: 0.75em;
                }
                </style>
                <div class="dps-panel">
                ]]..dpsReporter.getDpsGraphHtml()..[[
                </div>
                ]]V=V..K()V=V..[[
                <style>
                body {
                    box-shadow: inset 0 0 800px 0px rgba(255,0,0,]]..1-system.getUtcTime()+wtRadar.lastEnemyContact..[[)
                }
                </style>
                ]]return V end;system.showScreen(1)local function aF()return U()..wtRadar.getHUD()end;function updateHud()system.setScreen(aF())end

    construct:
        onPvPTimer(active):
            lua: |
                dpsReporter.onPvPTimer(active)
    system:
        onUpdate:
            lua: |
                wtWeapons.onUpdate()
                updateHud()
        onFlush:
            lua: |
                wtRadar.onFlush()
        inputText(text):
            lua: |
                wtRadar.onTextInput(text)
        actionStart:
            args: [option4]
            lua: |
                showGunnerAR = not showGunnerAR
    unit:
        tick:
            args: ["wtRadarTick"]
            lua: |
                wtRadar.onTick()
        tick:
            args: ["weaponStats"]
            lua: |
                dpsReporter.onTimer()
    shield:
        onAbsorbed(hitpoints, hitpointsRaw):
            lua: |
                dpsReporter.shieldOnAbsorb(hitpoints, hitpointsRaw)
    weapon_1:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_2:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_3:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_4:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_5:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
    weapon_6:
        onHit(targetId,damage):
            lua: |
                dpsReporter.weaponOnHit(targetId, damage)
        onMissed(targetId):
            lua: |
                dpsReporter.weaponOnMiss(targetId)
        onElementDestroyed(targetId,elementId):
            lua: |
